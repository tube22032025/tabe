#!/bin/bash

# 1. Kiểm tra quyền root và chuyển sang quyền root nếu cần
if [ "$(id -u)" != "0" ]; then
   echo "Đang chuyển sang quyền root..."
   exec sudo bash "$0"
   exit 1
fi

echo "Đang chạy với quyền root..."

# 2. Xác định thư mục hiện tại một cách chính xác
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd "$SCRIPT_DIR"
CURRENT_DIR="$(pwd)"
echo "Thư mục hiện tại: $CURRENT_DIR"

# Cập nhật và cài đặt các gói cần thiết
echo "Cập nhật và cài đặt các gói cần thiết..."
apt update -y
apt install -y python3-pip python3-flask python3-apscheduler cron systemd curl

# Cài đặt gunicorn và pytubefix
echo "Đang cài đặt gunicorn và pytubefix..."
pip3 install --break-system-packages gunicorn pytubefix

# Tạo thư mục templates và file index.html
echo "Tạo thư mục templates và file index.html..."
mkdir -p templates
curl -s https://raw.githubusercontent.com/tube22032025/tube/refs/heads/main/index.html > templates/index.html

# Tạo file templates/404.html
echo "<h1>404 Not Found</h1><p>Trang bạn yêu cầu không tồn tại.</p>" > templates/404.html

# Tạo file youtube.py nếu chưa tồn tại
if [ ! -f "$CURRENT_DIR/youtube.py" ]; then
    echo "Tạo file youtube.py..."
    curl -s https://raw.githubusercontent.com/tube22032025/tube/refs/heads/main/tube.py -o "$CURRENT_DIR/youtube.py"
else
    echo "File youtube.py đã tồn tại, đang cập nhật..."
    curl -s https://raw.githubusercontent.com/tube22032025/tube/refs/heads/main/tube.py -o "$CURRENT_DIR/youtube.py.new"
    mv "$CURRENT_DIR/youtube.py.new" "$CURRENT_DIR/youtube.py"
fi

# Đảm bảo file có quyền thực thi
echo "Cấp quyền thực thi cho file..."
chmod +x "$CURRENT_DIR/youtube.py"

# Tạo file dịch vụ systemd cho gunicorn với vị trí chính xác
SERVICE_FILE="/etc/systemd/system/youtube.service"

echo "Tạo file dịch vụ systemd cho gunicorn..."
cat > "$SERVICE_FILE" << EOL
[Unit]
Description=Gunicorn instance to serve Youtube App
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=$CURRENT_DIR
Environment="PATH=/usr/bin:/usr/local/bin"
ExecStart=/usr/local/bin/gunicorn --workers 4 --bind 0.0.0.0:80 youtube:app
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOL

# Reload systemd để nhận cấu hình mới
echo "Reload systemd để nhận cấu hình mới..."
systemctl daemon-reload

# Kích hoạt dịch vụ gunicorn với kiểm tra port 80
echo "Kích hoạt dịch vụ gunicorn..."

# Kiểm tra xem cổng 80 có đang được sử dụng không và dừng dịch vụ nếu cần thiết
if lsof -i :80; then
    echo "Cổng 80 đang được sử dụng. Đang dừng dịch vụ..."
    fuser -k 80/tcp # Dừng tất cả các tiến trình đang sử dụng cổng 80
fi

systemctl enable youtube.service

# Chạy youtube.py lần đầu để cài đặt sau khi cài đặt dịch vụ hoàn tất.
echo "Chạy youtube.py lần đầu để cài đặt..."
cd "$CURRENT_DIR"
python3 youtube.py &
PID=$!
sleep 5

# Thông báo cho người dùng về việc nhập mã kết nối Google.
echo "Vui lòng mở https://www.google.com/device và nhập mã kết nối để kết nối Google."
echo "Sau đó, truy cập http://$(hostname -I | awk '{print $1}'):80 để nhập mã."

if ps -p $PID > /dev/null; then
    kill $PID
    echo "Đã chạy và dừng youtube.py thành công."
else
    echo "youtube.py đã tự kết thúc."
fi

# Khởi động dịch vụ gunicorn sau khi chạy youtube.py lần đầu.
systemctl start youtube.service

# Kiểm tra trạng thái dịch vụ
echo "Kiểm tra trạng thái dịch vụ..."
systemctl status youtube.service --no-pager

# Thêm vào rc.local để đảm bảo dịch vụ khởi động khi reboot (phương án dự phòng)
RC_LOCAL="/etc/rc.local"
if [ ! -f "$RC_LOCAL" ]; then
    echo "Tạo file rc.local..."
    cat > "$RC_LOCAL" << EOL
#!/bin/bash
if lsof -i :80; then
    fuser -k 80/tcp # Dừng tất cả các tiến trình đang sử dụng cổng 80 trước khi khởi động lại Gunicorn.
fi
systemctl start youtube.service
exit 0
EOL
    chmod +x "$RC_LOCAL"
else
    if ! grep -q "systemctl start youtube.service" "$RC_LOCAL"; then
        # Thêm lệnh trước dòng "exit 0" nếu có
        if grep -q "exit 0" "$RC_LOCAL"; then
            sed -i '/exit 0/i systemctl start youtube.service' "$RC_LOCAL"
        else
            # Nếu không có "exit 0", thêm vào cuối file
            echo "systemctl start youtube.service" >> "$RC_LOCAL"
            echo "exit 0" >> "$RC_LOCAL"
        fi
        chmod +x "$RC_LOCAL"
    fi
fi

# Thêm vào crontab để khởi động lại dịch vụ khi reboot (phương án dự phòng)
echo "Thêm vào crontab để khởi động lại dịch vụ khi reboot..."
(crontab -l 2>/dev/null | grep -v "youtube.service"; echo "@reboot if lsof -i :80; then fuser -k 80/tcp; fi; systemctl start youtube.service") | crontab -

# Kiểm tra crontab đã được cấu hình
echo "Crontab đã được cấu hình:"
crontab -l

echo "==================================================="
echo "Cài đặt hoàn tất. Dịch vụ youtube đã được cấu hình để tự khởi động khi VPS khởi động."
echo "Dịch vụ đang chạy tại địa chỉ: http://$(hostname -I | awk '{print $1}'):80"
echo "==================================================="
